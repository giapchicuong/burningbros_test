name: CI/CD

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Run Flutter analyze & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            android/.gradle
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-

      - name: Set up .env
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - run: flutter pub get

      - name: Check formatting
        run: dart format . --set-exit-if-changed || true

      - run: flutter analyze --no-fatal-infos --no-fatal-warnings
      - run: flutter test

  build_android_aab:
    name: Build Android AAB
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Set up .env
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle --release

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build_android_apk:
    name: Build Android APK
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Set up .env
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - run: flutter pub get
      - run: flutter clean
      - run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    name: Build iOS
    needs: [ build ]
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Set up .env
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ipa --release --no-codesign

      - name: Upload iOS app artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ios-app
          path: build/ios/iphoneos/Runner.app

