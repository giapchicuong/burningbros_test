// Mocks generated by Mockito 5.4.5 from annotations
// in burningbros_test/test/features/products/data/repositories/product_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:burningbros_test/features/products/data/data_sources/local/products_local_service.dart'
    as _i8;
import 'package:burningbros_test/features/products/data/data_sources/products_api_service.dart'
    as _i3;
import 'package:burningbros_test/features/products/data/models/product.dart'
    as _i5;
import 'package:burningbros_test/features/products/data/models/product_pagination_query.dart'
    as _i6;
import 'package:burningbros_test/features/products/data/models/product_search_query.dart'
    as _i7;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductsApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsApiService extends _i1.Mock
    implements _i3.ProductsApiService {
  @override
  _i4.Future<List<_i5.ProductModel>> getProducts(
          _i6.ProductPaginationQueryModel? productQuery) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [productQuery],
        ),
        returnValue:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
      ) as _i4.Future<List<_i5.ProductModel>>);

  @override
  _i4.Future<List<_i5.ProductModel>> searchProducts(
          _i7.ProductSearchQueryModel? productSearchQuery) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProducts,
          [productSearchQuery],
        ),
        returnValue:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
      ) as _i4.Future<List<_i5.ProductModel>>);
}

/// A class which mocks [ProductsLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsLocalService extends _i1.Mock
    implements _i8.ProductsLocalService {
  @override
  _i2.Box<_i5.ProductModel> get productBox => (super.noSuchMethod(
        Invocation.getter(#productBox),
        returnValue: _FakeBox_0<_i5.ProductModel>(
          this,
          Invocation.getter(#productBox),
        ),
        returnValueForMissingStub: _FakeBox_0<_i5.ProductModel>(
          this,
          Invocation.getter(#productBox),
        ),
      ) as _i2.Box<_i5.ProductModel>);

  @override
  _i4.Future<List<_i5.ProductModel>> getFavoriteProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoriteProducts,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.ProductModel>>.value(<_i5.ProductModel>[]),
      ) as _i4.Future<List<_i5.ProductModel>>);

  @override
  _i4.Future<void> saveFavoriteProduct(_i5.ProductModel? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavoriteProduct,
          [product],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeFavoriteProduct(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFavoriteProduct,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
